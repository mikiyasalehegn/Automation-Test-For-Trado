{"name": "test_sorting_from_lowest_price", "status": "failed", "statusDetails": {"message": "AssertionError: assert False == True\n +  where False = <bound method PromotionPage.check_sorting_with_from_lowest_price of <Web.Tests.test_promotion.Test_Promotion object at 0x000002BCBF0CC460>>()\n +    where <bound method PromotionPage.check_sorting_with_from_lowest_price of <Web.Tests.test_promotion.Test_Promotion object at 0x000002BCBF0CC460>> = <Web.Tests.test_promotion.Test_Promotion object at 0x000002BCBF0CC460>.check_sorting_with_from_lowest_price", "trace": "self = <Web.Tests.test_promotion.Test_Promotion object at 0x000002BCBF0CC460>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"Checking if sorting is working from lowest price\")\n    def test_sorting_from_lowest_price(self):\n        self.open()\n        self.select_option1()\n        self.select_option2()\n        self.click_save_button()\n        self.clicking_the_button(self.sorting_dropdown)\n        self.clicking_the_button(self.sort_lp)\n>       assert self.check_sorting_with_from_lowest_price() == True\nE       assert False == True\nE        +  where False = <bound method PromotionPage.check_sorting_with_from_lowest_price of <Web.Tests.test_promotion.Test_Promotion object at 0x000002BCBF0CC460>>()\nE        +    where <bound method PromotionPage.check_sorting_with_from_lowest_price of <Web.Tests.test_promotion.Test_Promotion object at 0x000002BCBF0CC460>> = <Web.Tests.test_promotion.Test_Promotion object at 0x000002BCBF0CC460>.check_sorting_with_from_lowest_price\n\nTests\\test_promotion.py:270: AssertionError"}, "description": "Checking if sorting is working from lowest price", "steps": [{"name": "Opening the qa-trado website", "status": "passed", "start": 1677085389369, "stop": 1677085410159}, {"name": "clicking_the_button", "status": "passed", "parameters": [{"name": "locate", "value": "('xpath', \"//body/div[@id='root']/div[1]/div[2]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[2]/div[3]/div[1]/select[1]\")"}], "start": 1677085412324, "stop": 1677085414885}, {"name": "clicking_the_button", "status": "passed", "parameters": [{"name": "locate", "value": "('xpath', \"//body/div[@id='root']/div[1]/div[2]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[2]/div[3]/div[1]/select[1]/option[2]\")"}], "start": 1677085414886, "stop": 1677085417099}, {"name": "check_sorting_with_from_lowest_price", "status": "passed", "start": 1677085417099, "stop": 1677085419073}], "start": 1677085389369, "stop": 1677085419082, "uuid": "b6d6c519-5d51-4732-9980-760c9571b25b", "historyId": "f359874064deb04a503b7ab0521571a1", "testCaseId": "e0a0e038c686607a782112d4e42e1459", "fullName": "Tests.test_promotion.Test_Promotion#test_sorting_from_lowest_price", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_promotion"}, {"name": "subSuite", "value": "Test_Promotion"}, {"name": "host", "value": "mike"}, {"name": "thread", "value": "18868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_promotion"}]}