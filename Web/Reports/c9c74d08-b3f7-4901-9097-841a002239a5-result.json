{"name": "test_whatsapp_type", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Web.Tests.test_common_business.Test_CommonBusiness object at 0x000002BCBF0C14B0>\n\n    @allure.description(\"Test The Trado Support Send button is clickable\")\n    @pytest.mark.sanity\n    def test_whatsapp_type(self):\n        self.handling_the_first_popup()\n        self.select_the_link()\n        self._click(self.for_all_Question)\n        self._click(self.whatsapp_logo)\n        self._click(self.whatsapp_logo_link)\n>       self._wait_until_element_is_visible(self.whatsapp_type)\n\nTests\\test_common_business.py:149: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nBasePage\\basepage.py:25: in _wait_until_element_is_visible\n    wait.until(ec.visibility_of_element_located(locate))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6513d34f183ffc404982d27086c4fa87\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002BCBF371090>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\pselenium-venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "description": "Test The Trado Support Send button is clickable", "steps": [{"name": "Opening the qa-trado website", "status": "passed", "start": 1677081003659, "stop": 1677081016106}], "start": 1677081003659, "stop": 1677081033418, "uuid": "24a24161-50c5-45da-9d46-3826bb167d60", "historyId": "975c45a390442fccc967dad4522f0e6b", "testCaseId": "f513b6bfa3f14f66cb077922aa5cd41b", "fullName": "Tests.test_common_business.Test_CommonBusiness#test_whatsapp_type", "labels": [{"name": "tag", "value": "sanity"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_common_business"}, {"name": "subSuite", "value": "Test_CommonBusiness"}, {"name": "host", "value": "mike"}, {"name": "thread", "value": "18868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_common_business"}]}