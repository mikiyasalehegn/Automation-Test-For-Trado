{"name": "test_sorting_from_highest_price", "status": "failed", "statusDetails": {"message": "AssertionError: assert 2 == 0\n +  where 2 = <bound method SnacksPage.check_sorting_with_from_lowest_price of <Web.Tests.test_snacks.Test_SnacksPage object at 0x000002BCBF4C3910>>()\n +    where <bound method SnacksPage.check_sorting_with_from_lowest_price of <Web.Tests.test_snacks.Test_SnacksPage object at 0x000002BCBF4C3910>> = <Web.Tests.test_snacks.Test_SnacksPage object at 0x000002BCBF4C3910>.check_sorting_with_from_lowest_price", "trace": "self = <Web.Tests.test_snacks.Test_SnacksPage object at 0x000002BCBF4C3910>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"Verify if the sorting feature is working from highest price\")\n    def test_sorting_from_highest_price(self):\n        self.open()\n        self.select_option1()\n        self.select_option2()\n        self.click_save_button()\n        self.clicking_snacks_link()\n        self.clicking_the_button(self.sorting_dropdown)\n        self.clicking_the_button(self.sort_hp)\n>       assert self.check_sorting_with_from_lowest_price() == 0\nE       assert 2 == 0\nE        +  where 2 = <bound method SnacksPage.check_sorting_with_from_lowest_price of <Web.Tests.test_snacks.Test_SnacksPage object at 0x000002BCBF4C3910>>()\nE        +    where <bound method SnacksPage.check_sorting_with_from_lowest_price of <Web.Tests.test_snacks.Test_SnacksPage object at 0x000002BCBF4C3910>> = <Web.Tests.test_snacks.Test_SnacksPage object at 0x000002BCBF4C3910>.check_sorting_with_from_lowest_price\n\nTests\\test_snacks.py:129: AssertionError"}, "description": "Verify if the sorting feature is working from highest price", "steps": [{"name": "Opening the qa-trado website", "status": "passed", "start": 1677086619182, "stop": 1677086636665}, {"name": "clicking_snacks_link", "status": "passed", "start": 1677086638964, "stop": 1677086641323}, {"name": "clicking_the_button", "status": "passed", "parameters": [{"name": "locate", "value": "('xpath', \"//body/div[@id='root']/div[1]/div[2]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[3]/div[1]/select[1]\")"}], "start": 1677086641323, "stop": 1677086641736}, {"name": "clicking_the_button", "status": "passed", "parameters": [{"name": "locate", "value": "('xpath', '/html[1]/body[1]/div[1]/div[1]/div[2]/div[2]/div[1]/div[1]/div[2]/div[1]/div[2]/div[1]/div[3]/div[1]/select[1]/option[3]')"}], "start": 1677086641737, "stop": 1677086642459}, {"name": "check_sorting_with_from_lowest_price", "status": "passed", "start": 1677086642460, "stop": 1677086643424}], "start": 1677086619182, "stop": 1677086643424, "uuid": "da3adb0f-8feb-4384-a7cb-98e807a28f12", "historyId": "79f4d81871c668acfa5125efb8347f51", "testCaseId": "83689f7080d6f125bcccdbb3bf982bbd", "fullName": "Tests.test_snacks.Test_SnacksPage#test_sorting_from_highest_price", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_snacks"}, {"name": "subSuite", "value": "Test_SnacksPage"}, {"name": "host", "value": "mike"}, {"name": "thread", "value": "18868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_snacks"}]}