import time
import allure
from Web.Pages.order_page import OrderPage


class Test_Order(OrderPage):

    def handle_the_first_popup(self):
        self.open()
        self.select_option1()
        self.select_option2()
        self.click_save_button()

    @allure.severity(allure.severity_level.CRITICAL)
    @allure.description("Verify the checkout process with all valid data")
    def test_checkout_correctly(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number}'))
        self.press_login_button()
        self.press_checkout_button()
        self.click_finish_button()
        self.select_payment(self.payment_option)
        self.enter_branch(self.branch_num)
        self.enter_card_num_for_mobile(self.card_number)
        self.click_confirm()
        self.click_pay()
        assert self.text_reading(self.thanks) == 'תודה שהזמנת דרכנו!'
        self.back()
        self._driver.close()

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify check out process without business name")
    def test_order_without_business_name(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number2)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number2}'))
        self.press_login_button()
        self.press_checkout_button()
        self.click_the_field(self.business_name)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_city(self.city2, self.town)
        self.enter_street(self.street2, self.street_name)
        self.enter_home(self.home2, self.home_num)
        self.enter_get(self.entrance2, self.enter)
        self.enter_floor(self.floor2, self.floor_num)
        self.enter_name(self.business_name2, self.order_name)
        self.click_finish_button()
        assert self.text_reading(self.bname_error) == 'נא למלא שדה זה'
        self._driver.close()

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify checkout without identification number")
    def test_order_without_id_num(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number2)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number2}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.order_name)
        self.clear_the_field(self.id_num)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_city(self.city2, self.town)
        self.enter_street(self.street2, self.street_name)
        self.enter_home(self.home2, self.home_num)
        self.enter_get(self.entrance2, self.enter)
        self.enter_floor(self.floor2, self.floor_num)
        self.enter_name(self.business_name2, self.order_name)
        self.click_finish_button()
        assert self.text_reading(self.id_error) == 'נא למלא שדה זה'
        self._driver.close()

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify the checkout doesn't work without email")
    def test_order_without_email(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number2)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number2}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.order_name)
        self.enter_id(self.id_num)
        self.clear_the_field(self.business_email)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_city(self.city2, self.town)
        self.enter_street(self.street2, self.street_name)
        self.enter_home(self.home2, self.home_num)
        self.enter_get(self.entrance2, self.enter)
        self.enter_floor(self.floor2, self.floor_num)
        self.enter_name(self.business_name2, self.order_name)
        self.click_finish_button()
        assert self.text_reading(self.email_error) == 'נא למלא שדה זה'
        self._driver.close()

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify the checkout is not working with invalid data")
    def test_order_with_invalid_email(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number2)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number2}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.order_name)
        self.enter_id(self.id_num)
        self.enter_email(self.business_email, self.invalid_email)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_city(self.city2, self.town)
        self.enter_street(self.street2, self.street_name)
        self.enter_home(self.home2, self.home_num)
        self.enter_get(self.entrance2, self.enter)
        self.enter_floor(self.floor2, self.floor_num)
        self.enter_name(self.business_name2, self.order_name)
        self.click_finish_button()
        assert self.text_reading(self.email_error) == 'דוא״ל לא תקין'
        self._driver.close()

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify the checkout doesn't work without city.")
    def test_order_without_city(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number2)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number2}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.order_name)
        self.enter_id(self.id_num)
        self.enter_email(self.business_email, self.email_address)
        self.enter_street(self.street, self.street_name)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_street(self.street2, self.street_name)
        self.enter_home(self.home2, self.home_num)
        self.enter_get(self.entrance2, self.enter)
        self.enter_floor(self.floor2, self.floor_num)
        self.enter_name(self.business_name2, self.order_name)
        self.click_finish_button()
        assert self.text_reading(self.city_error) == 'דוא״ל לא תקין'
        self._driver.close()

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify the checkout doesn't work without street.")
    def test_order_without_street(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number2)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number2}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.order_name)
        self.enter_id(self.id_num)
        self.enter_email(self.business_email, self.email_address)
        self.enter_city(self.city, self.town)
        self.click_the_field(self.street)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_city(self.city2, self.town)
        self.clear_the_field(self.street)
        self.enter_home(self.home2, self.home_num)
        self.enter_get(self.entrance2, self.enter)
        self.enter_floor(self.floor2, self.floor_num)
        self.enter_name(self.business_name2, self.order_name)
        self.click_finish_button()
        assert self.text_reading(self.street_error) == 'נא למלא שדה זה'
        self._driver.close()

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify the checkout doesn't work without order name.")
    def test_order_without_name(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number2)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number2}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.order_name)
        self.enter_id(self.id_num)
        self.enter_email(self.business_email, self.email_address)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_city(self.city2, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_home(self.home2, self.home_num)
        self.enter_get(self.entrance2, self.enter)
        self.enter_floor(self.floor2, self.floor_num)
        self.enter_name(self.business_name2, self.order_name)
        self.clear_the_field(self.fst_name)
        self.click_finish_button()
        assert self.text_reading(self.fn_error) == 'נא למלא שדה זה'
        self._driver.close()

    @allure.severity(allure.severity_level.CRITICAL)
    @allure.description("Verify the checkout works with correct user datas.")
    def test_order_correctly(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number2)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number2}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.order_name)
        self.enter_id(self.id_num)
        self.enter_email(self.business_email, self.email_address)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_city(self.city2, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_home(self.home2, self.home_num)
        self.enter_get(self.entrance2, self.enter)
        self.enter_floor(self.floor2, self.floor_num)
        self.enter_name(self.business_name2, self.order_name)
        self.click_finish_button()
        self.select_payment(self.payment_option)
        self.enter_branch(self.branch_num)
        self.enter_card_num_for_mobile(self.card_number)
        self.click_confirm()
        self.click_pay()
        self._driver.close()
        assert self.check_on_surver()['email'] == self.email_address
        assert int(self.check_on_surver()['userId']) == self.my_id_num
        assert self.check_on_surver()['address']['city'] == self.town
        assert self.check_on_surver()['address']['street'] == self.street_name

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify the checkout doesn't work without entering invoice data.")
    def test_without_entering_invoice_data(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.random_name())
        self.enter_id(self.id_num)
        self.enter_email(self.business_email, self.email_address)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_home(self.home, self.home_num)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_name(self.business_name2, self.random_name())
        self.click_finish_button()
        self.select_payment(self.payment_option)
        self.click_confirm()
        assert self.text_reading(self.my_wallet) != 'הארנק שלי'
        self._driver.close()

    @allure.severity(allure.severity_level.MINOR)
    @allure.description("Verify the title of payment page is correct")
    def test_the_title_of_payment_page(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.random_name())
        self.enter_id(self.id_num)
        self.enter_email(self.business_email, self.email_address)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_home(self.home, self.home_num)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_name(self.business_name2, self.random_name())
        self.click_finish_button()
        self.select_payment(self.new_card)
        assert self.text_reading(self.title_of_iframe) == 'הוספת כרטיס אשראי'
        self._driver.close()

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify if the fintrado payment system is working properly")
    def test_fintrado_payment(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.order_name)
        self.enter_id(self.id_num)
        self.enter_email(self.business_email, self.email_address)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_home(self.home, self.home_num)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_name(self.business_name2, self.order_name)
        self.click_finish_button()
        self._is_enabled(self.fin_trado)
        self._driver.close()

    @allure.severity(allure.severity_level.NORMAL)
    @allure.description("Verify if checkout works by adding user card information")
    def test_new_card_correctly(self):
        self.handle_the_first_popup()
        self.click_the_product(self.og_kush)
        self.click_plus_icon()
        self.press_checkout_button()
        self.enter_phone(self.phone_number)
        self.click_connection()
        self.enter_login_code(self.login_code(f'{self.phone_number}'))
        self.press_login_button()
        self.press_checkout_button()
        self.enter_name(self.business_name, self.random_name())
        self.enter_id(self.id_num)
        self.enter_email(self.business_email, self.email_address)
        self.enter_city(self.city, self.town)
        self.enter_street(self.street, self.street_name)
        self.enter_home(self.home, self.home_num)
        self.enter_get(self.entrance, self.enter)
        self.enter_floor(self.floor, self.floor_num)
        self.enter_name(self.business_name2, self.random_name())
        self.click_finish_button()
        self.select_payment(self.new_card)
        self.switching_to_iframe()
        self.enter_card_num(self.card_number)
        self.enter_id_for_card(self.payment_id)
        self.select_exp_date(self.expyear, self.card_year)
        self.select_exp_date(self.expmon, self.card_mon)
        self.enter_credit_card(self.cvv, self.card_cvv)
        self.press_credit_pay_button()
        assert self.text_reading(self.thanks) == 'תודה שהזמנת דרכנו!'
        self._driver.close()



